name: Build PHP for Android

on:
  push:
    tags:
      - "v*.*.*" # trigger on version tags like v8.2.18

jobs:
  build:
    name: Build PHP for ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [armv7a, arm64]

    env:
      PHP_VERSION: "8.2.18"
      API_LEVEL: "24"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up environment variables
      id: vars
      run: |
        if [ "${{ matrix.arch }}" == "arm64" ]; then
          echo "TARGET_HOST=aarch64-linux-android" >> $GITHUB_ENV
          echo "ARCH=arm64-v8a" >> $GITHUB_ENV
        else
          echo "TARGET_HOST=armv7a-linux-androideabi" >> $GITHUB_ENV
          echo "ARCH=armeabi-v7a" >> $GITHUB_ENV
        fi

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential autoconf bison re2c libxml2-dev \
          libsqlite3-dev libssl-dev libcurl4-openssl-dev pkg-config \
          git wget unzip

    - name: Download PHP source
      run: |
        wget https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz
        tar -xf php-${PHP_VERSION}.tar.gz
        mv php-${PHP_VERSION} php-src

    - name: Download Android NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip -q android-ndk-r25c-linux.zip
        echo "ANDROID_NDK_HOME=$GITHUB_WORKSPACE/android-ndk-r25c" >> $GITHUB_ENV

    - name: Build PHP
      run: |
        cd php-src
        export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot

        export CC="$TOOLCHAIN/bin/${TARGET_HOST}${API_LEVEL}-clang"
        export CXX="$TOOLCHAIN/bin/${TARGET_HOST}${API_LEVEL}-clang++"
        export AR="$TOOLCHAIN/bin/llvm-ar"
        export RANLIB="$TOOLCHAIN/bin/llvm-ranlib"
        export LD="$TOOLCHAIN/bin/ld"
        export STRIP="$TOOLCHAIN/bin/llvm-strip"

        ./buildconf --force

        ./configure \
          --host=$TARGET_HOST \
          --prefix=$GITHUB_WORKSPACE/install/${ARCH} \
          --disable-all \
          --enable-cli \
          --without-pear \
          --disable-cgi \
          --enable-mbstring \
          CC="$CC" CXX="$CXX" AR="$AR" RANLIB="$RANLIB" LD="$LD" STRIP="$STRIP" \
          --with-sysroot="$SYSROOT"

        make -j$(nproc)
        make install

    - name: Archive PHP binary
      run: |
        cd install/${ARCH}
        zip -r ${{ github.workspace }}/php-${PHP_VERSION}-${ARCH}.zip .

    - name: Upload binary to release
      uses: softprops/action-gh-release@v2
      with:
        files: php-${{ env.PHP_VERSION }}-${{ env.ARCH }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
